diff --git a/src/Nethermind/Nethermind.Blockchain.Test/Synchronization/EthSyncPeerPoolTests.cs b/src/Nethermind/Nethermind.Blockchain.Test/Synchronization/EthSyncPeerPoolTests.cs
index 6043e9c3..628de13e 100644
--- a/src/Nethermind/Nethermind.Blockchain.Test/Synchronization/EthSyncPeerPoolTests.cs
+++ b/src/Nethermind/Nethermind.Blockchain.Test/Synchronization/EthSyncPeerPoolTests.cs
@@ -160,7 +160,7 @@ namespace Nethermind.Blockchain.Test.Synchronization
             for (int i = 3; i > 0; i--)
             {
                 Assert.AreEqual(3, _pool.PeerCount, $"Remove {i}");
-                _pool.RemovePeer(syncPeers[i - 1]);
+                _pool.RemovePeer(syncPeers[i - 1], EthSyncPeerPool.PeerRemoveReason.SessionDisconnected);
             }
         }
 
@@ -189,7 +189,7 @@ namespace Nethermind.Blockchain.Test.Synchronization
         public void Does_not_crash_when_removing_non_existing_peer()
         {
             _pool.Start();
-            _pool.RemovePeer(new SimpleSyncPeerMock(TestItem.PublicKeyA));
+            _pool.RemovePeer(new SimpleSyncPeerMock(TestItem.PublicKeyA), EthSyncPeerPool.PeerRemoveReason.SessionDisconnected);
             Assert.AreEqual(0, _pool.PeerCount);
         }
 
@@ -207,7 +207,7 @@ namespace Nethermind.Blockchain.Test.Synchronization
             for (int i = 3; i > 0; i--)
             {
                 Assert.AreEqual(i, _pool.PeerCount, $"Remove {i}");
-                _pool.RemovePeer(syncPeers[i - 1]);
+                _pool.RemovePeer(syncPeers[i - 1], EthSyncPeerPool.PeerRemoveReason.SessionDisconnected);
             }
         }
 
@@ -392,7 +392,7 @@ namespace Nethermind.Blockchain.Test.Synchronization
             await Task.Delay(200);
             
             var allocation = _pool.Allocate();
-            _pool.RemovePeer(peer);
+            _pool.RemovePeer(peer, EthSyncPeerPool.PeerRemoveReason.SessionDisconnected);
             
             Assert.Null(allocation.Current);
         }
@@ -425,7 +425,7 @@ namespace Nethermind.Blockchain.Test.Synchronization
             await Task.Delay(200);
             
             var allocation = _pool.Allocate();
-            _pool.RemovePeer(peer);
+            _pool.RemovePeer(peer, EthSyncPeerPool.PeerRemoveReason.SessionDisconnected);
             await Task.Delay(1000);
             
             Assert.AreEqual(null, allocation.Current);
@@ -443,7 +443,7 @@ namespace Nethermind.Blockchain.Test.Synchronization
             await Task.Delay(200);
             
             var allocation = _pool.Allocate();
-            _pool.RemovePeer(peer);
+            _pool.RemovePeer(peer, EthSyncPeerPool.PeerRemoveReason.SessionDisconnected);
             await Task.Delay(1000);
             
             Assert.AreEqual(null, allocation.Current);
@@ -460,5 +460,16 @@ namespace Nethermind.Blockchain.Test.Synchronization
             var allocation = _pool.Allocate();
             _pool.Free(allocation);
         }
+        
+        [Test]
+        public void Report_no_sync_progress_on_null_does_not_crash()
+        {
+            var peer = new SimpleSyncPeerMock(TestItem.PublicKeyA);
+            
+            _pool.Start();
+            _pool.AddPeer(peer);
+            
+            _pool.ReportNoSyncProgress(null);
+        }
     }
 }
\ No newline at end of file
diff --git a/src/Nethermind/Nethermind.Blockchain.Test/Synchronization/SynchronizerTests.cs b/src/Nethermind/Nethermind.Blockchain.Test/Synchronization/SynchronizerTests.cs
index d96c70f9..3e2dcc17 100644
--- a/src/Nethermind/Nethermind.Blockchain.Test/Synchronization/SynchronizerTests.cs
+++ b/src/Nethermind/Nethermind.Blockchain.Test/Synchronization/SynchronizerTests.cs
@@ -396,7 +396,7 @@ namespace Nethermind.Blockchain.Test.Synchronization
             public SyncingContext AfterPeerIsRemoved(ISyncPeer syncPeer)
             {
                 _peers.Remove(syncPeer.ClientId);
-                SyncPeerPool.RemovePeer(syncPeer);
+                SyncPeerPool.RemovePeer(syncPeer, EthSyncPeerPool.PeerRemoveReason.SessionDisconnected);
                 return this;
             }
 
diff --git a/src/Nethermind/Nethermind.Blockchain/Synchronization/EthSyncPeerPool.cs b/src/Nethermind/Nethermind.Blockchain/Synchronization/EthSyncPeerPool.cs
index 39e01f04..6125f4e7 100644
--- a/src/Nethermind/Nethermind.Blockchain/Synchronization/EthSyncPeerPool.cs
+++ b/src/Nethermind/Nethermind.Blockchain/Synchronization/EthSyncPeerPool.cs
@@ -216,13 +216,13 @@ namespace Nethermind.Blockchain.Synchronization
                     if (firstToComplete.IsFaulted || firstToComplete == delayTask)
                     {
                         if (_logger.IsTrace) _logger.Trace($"InitPeerInfo failed for node: {syncPeer.Node:s}{Environment.NewLine}{t.Exception}");
-                        RemovePeer(syncPeer);
+                        RemovePeer(syncPeer, PeerRemoveReason.SyncFault);
                         SyncEvent?.Invoke(this, new SyncEventArgs(syncPeer, peerInfo.IsInitialized ? Synchronization.SyncEvent.Failed : Synchronization.SyncEvent.InitFailed));
                     }
                     else if (firstToComplete.IsCanceled)
                     {
                         if (_logger.IsTrace) _logger.Trace($"InitPeerInfo canceled for node: {syncPeer.Node:s}{Environment.NewLine}{t.Exception}");
-                        RemovePeer(syncPeer);
+                        RemovePeer(syncPeer, PeerRemoveReason.Cancellation);
                         SyncEvent?.Invoke(this, new SyncEventArgs(syncPeer, peerInfo.IsInitialized ? Synchronization.SyncEvent.Cancelled : Synchronization.SyncEvent.InitCancelled));
                         token.ThrowIfCancellationRequested();
                     }
@@ -315,9 +315,16 @@ namespace Nethermind.Blockchain.Synchronization
             _peerRefreshQueue.Add(peerInfo);
         }
 
-        public void RemovePeer(ISyncPeer syncPeer)
+        public enum PeerRemoveReason
         {
-            if (_logger.IsDebug) _logger.Debug($"Removing synchronization peer {syncPeer.Node:c}");
+            SyncFault,
+            Cancellation,
+            SessionDisconnected
+        }
+        
+        public void RemovePeer(ISyncPeer syncPeer, PeerRemoveReason reason)
+        {
+            if (_logger.IsInfo) _logger.Info($"Removing synchronization peer {syncPeer.Node:c} - {reason}");
             if (!_isStarted)
             {
                 if (_logger.IsDebug) _logger.Debug($"Sync peer pool not started yet - removing peer is blocked: {syncPeer.Node:s}");
@@ -449,9 +456,15 @@ namespace Nethermind.Blockchain.Synchronization
 
         public void ReportNoSyncProgress(SyncPeerAllocation allocation)
         {
+            PeerInfo peer = allocation.Current;
+            if (peer == null)
+            {
+                return;
+            }
+            
             // this is generally with the strange Parity nodes behaviour
             if (_logger.IsDebug) _logger.Debug($"No sync progress reported with {allocation.Current}");
-            _sleepingPeers.TryAdd(allocation.Current, DateTime.UtcNow);
+            _sleepingPeers.TryAdd(peer, DateTime.UtcNow);
         }
 
         public void Free(SyncPeerAllocation syncPeerAllocation)
diff --git a/src/Nethermind/Nethermind.Blockchain/Synchronization/IEthSyncPeerPool.cs b/src/Nethermind/Nethermind.Blockchain/Synchronization/IEthSyncPeerPool.cs
index 42fe81a5..23f16027 100644
--- a/src/Nethermind/Nethermind.Blockchain/Synchronization/IEthSyncPeerPool.cs
+++ b/src/Nethermind/Nethermind.Blockchain/Synchronization/IEthSyncPeerPool.cs
@@ -46,7 +46,7 @@ namespace Nethermind.Blockchain.Synchronization
         
         void Refresh(PublicKey nodeId);
         
-        void RemovePeer(ISyncPeer syncPeer);
+        void RemovePeer(ISyncPeer syncPeer, EthSyncPeerPool.PeerRemoveReason reason);
         
         void AddPeer(ISyncPeer syncPeer);
         
diff --git a/src/Nethermind/Nethermind.Blockchain/Synchronization/Synchronizer.cs b/src/Nethermind/Nethermind.Blockchain/Synchronization/Synchronizer.cs
index 8eb8a6a8..78756ab3 100644
--- a/src/Nethermind/Nethermind.Blockchain/Synchronization/Synchronizer.cs
+++ b/src/Nethermind/Nethermind.Blockchain/Synchronization/Synchronizer.cs
@@ -281,7 +281,7 @@ namespace Nethermind.Blockchain.Synchronization
                     }
 
                     if (_logger.IsTrace) _logger.Trace($"{_syncMode.Current} sync with {peerInfo} failed. Removing node from sync peers.");
-                    _syncPeerPool.RemovePeer(peerInfo.SyncPeer);
+                    _syncPeerPool.RemovePeer(peerInfo.SyncPeer, EthSyncPeerPool.PeerRemoveReason.SyncFault);
                     SyncEvent?.Invoke(this, new SyncEventArgs(peerInfo.SyncPeer, Synchronization.SyncEvent.Failed));
                     break;
                 case Task t when t.IsCanceled:
@@ -292,7 +292,7 @@ namespace Nethermind.Blockchain.Synchronization
                     else
                     {
                         if (_logger.IsTrace) _logger.Trace($"{_syncMode.Current} sync with {peerInfo} canceled. Removing node from sync peers.");
-                        _syncPeerPool.RemovePeer(peerInfo.SyncPeer);
+                        _syncPeerPool.RemovePeer(peerInfo.SyncPeer, EthSyncPeerPool.PeerRemoveReason.Cancellation);
                         SyncEvent?.Invoke(this, new SyncEventArgs(peerInfo.SyncPeer, Synchronization.SyncEvent.Cancelled));
                     }
                     break;
diff --git a/src/Nethermind/Nethermind.Network/ProtocolsManager.cs b/src/Nethermind/Nethermind.Network/ProtocolsManager.cs
index 9e4e5a25..cd59715a 100644
--- a/src/Nethermind/Nethermind.Network/ProtocolsManager.cs
+++ b/src/Nethermind/Nethermind.Network/ProtocolsManager.cs
@@ -145,7 +145,7 @@ namespace Nethermind.Network
             if (_syncPeers.ContainsKey(session.SessionId))
             {
                 ISyncPeer syncPeer = _syncPeers[session.SessionId];
-                _syncPool.RemovePeer(syncPeer);
+                _syncPool.RemovePeer(syncPeer, EthSyncPeerPool.PeerRemoveReason.SessionDisconnected);
                 _txPool.RemovePeer(syncPeer.Node.Id);
                 if(_logger.IsDebug) _logger.Debug($"{session.Node.ClientId} sync peer {session} disconnected {e.DisconnectType} {e.DisconnectReason}");
             }
diff --git a/src/rocksdb-sharp b/src/rocksdb-sharp
--- a/src/rocksdb-sharp
+++ b/src/rocksdb-sharp
@@ -1 +1 @@
-Subproject commit 37de4242ffc55bcdfa36ee288d7664ec9f62ed19
+Subproject commit 37de4242ffc55bcdfa36ee288d7664ec9f62ed19-dirty
